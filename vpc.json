{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Production Ready VPC",
    "Metadata": {
      "Author": { "Ref": "ParamAuthorName" }
    },
    "Parameters": {
      "ParamAuthorName": {
        "Type": "String",
        "Description": "Owner of the CFN Template."
      },
      "ParamProjectName": {
        "Type": "String",
        "Description": "awsdevops"
      },
      "ParamNatGateway": {
        "Type": "String",
        "Default": "true",
        "AllowedValues": ["true", "false"],
        "ConstraintDescription": "Whether to launch a NAT Gateway for the private subnets. true or false only."
      },
      "ParamVPCCidrRange": {
        "Type": "Number",
        "Default": 0,
        "MinValue": 0,
        "MaxValue": 255,
        "Description": "The x in 10.x.0.0/16 can be 0 - 255",
        "ConstraintDescription": "should be a number between 0 and 255"
      }
    },
    "Conditions": {
      "CreateNatGateway": {
        "Fn::Equals": [{ "Ref": "ParamNatGateway" }, "true"]
      }
    },
    "Resources": {
      "VPC": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": {
            "Fn::Sub": "10.${ParamVPCCidrRange}.0.0/16"
          },
          "EnableDnsSupport": true,
          "EnableDnsHostnames": true,
          "InstanceTenancy": "default",
          "Tags": [
            { "Key": "Owner", "Value": { "Ref": "ParamAuthorName" } },
            { "Key": "Name", "Value": { "Fn::Sub": "${AWS::StackName}-vpc" } }
          ]         
        }
      },
      "VPCIPv6CidrBlock": {
        "Type": "AWS::EC2::VPCCidrBlock",
        "DependsOn": "VPC",
        "Properties": {
          "AmazonProvidedIpv6CidrBlock": true,
          "VpcId": { "Ref": "VPC" }
        }
      },
      "PublicSubnetA": {
        "Type": "AWS::EC2::Subnet",
        "DependsOn": "VPCIPv6CidrBlock",
        "Properties": {
          "VpcId": { "Ref": "VPC" },
          "CidrBlock": {
            "Fn::Sub": "10.${ParamVPCCidrRange}.0.0/20",
          },
          "Ipv6CidrBlock": {
            "Fn::Select" : [
              0, 
              {
                "Fn::Cidr": [
                  { 
                    "Fn::Select": [
                      0,
                      {
                        "Fn::GetAtt": [ "VPC", "Ipv6CidrBlocks" ]
                      }
                    ]
                  },
                  256,
                  64 
                ]
              }
            ]
          },
          "AvailabilityZone": {
            "Fn::Select": [
              "0", 
              { "Fn:GetAZs": "" }
            ]
          },
          "Tags": [
            { 
              "Key": "Name", 
              "Value": { "Fn::Sub": "${AWS::StackName}-public-a" }
            },
            { "Key": "Owner", 
              "Value": { "Ref": "ParamAuthorName" } 
            }
          ]
        }
      },
      "PrivateSubnetA": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": { "Ref": "VPC" },
          "CidrBlock": {
            "Fn::Sub": "10.${ParamVPCCidrRange}.16.0/21",
          },
          "AvailabilityZone": {
            "Fn::Select": [
              "0", 
              { "Fn:GetAZs": "" }
            ]
          },
          "Tags": [
            { 
              "Key": "Name", 
              "Value": { "Fn::Sub": "${AWS::StackName}-private-a" }
            },
            { "Key": "Owner", 
              "Value": { "Ref": "ParamAuthorName" } 
            }
          ]
        }
      },
      "DBSubnetA": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": { "Ref": "VPC" },
          "CidrBlock": {
            "Fn::Sub": "10.${ParamVPCCidrRange}.24.0/222",
          },
          "AvailabilityZone": {
            "Fn::Select": [
              "0", 
              { "Fn:GetAZs": "" }
            ]
          },
          "Tags": [
            { 
              "Key": "Name", 
              "Value": { "Fn::Sub": "${AWS::StackName}-db-a" }
            },
            { "Key": "Owner", 
              "Value": { "Ref": "ParamAuthorName" } 
            }
          ]
        }
      },
      "PublicSubnetB": {
        "Type": "AWS::EC2::Subnet",
        "DependsOn": "VPCIPv6CidrBlock",
        "Properties": {
          "VpcId": { "Ref": "VPC" },
          "CidrBlock": {
            "Fn::Sub": "10.${ParamVPCCidrRange}.32.0/20",
          },
          "Ipv6CidrBlock": { 
            "Fn::Select" : [
              1, 
              {
                "Fn::Cidr": [
                  { 
                    "Fn::Select": [
                      0,
                      {
                        "Fn::GetAtt": [ "VPC", "Ipv6CidrBlocks" ]
                      }
                    ]
                  },
                  256,
                  64 
                ]
              }
            ]
          },
          "AvailabilityZone": {
            "Fn::Select": [
              "1", 
              { "Fn:GetAZs": "" }
            ]
          },
          "Tags": [
            { 
              "Key": "Name", 
              "Value": { "Fn::Sub": "${AWS::StackName}-public-b" }
            },
            { "Key": "Owner", 
              "Value": { "Ref": "ParamAuthorName" } 
            }
          ]
        }
      },
      "PrivateSubnetB": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": { "Ref": "VPC" },
          "CidrBlock": {
            "Fn::Sub": "10.${ParamVPCCidrRange}.48.0/21",
          },
          "AvailabilityZone": {
            "Fn::Select": [
              "1", 
              { "Fn:GetAZs": "" }
            ]
          },
          "Tags": [
            { 
              "Key": "Name", 
              "Value": { "Fn::Sub": "${AWS::StackName}-prvate-b" }
            },
            { "Key": "Owner", 
              "Value": { "Ref": "ParamAuthorName" } 
            }
          ]
        }
      },
      "DBSubnetB": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": { "Ref": "VPC" },
          "CidrBlock": {
            "Fn::Sub": "10.${ParamVPCCidrRange}.56.0/22",
          },
          "AvailabilityZone": {
            "Fn::Select": [
              "1", 
              { "Fn:GetAZs": "" }
            ]
          },
          "Tags": [
            { 
              "Key": "Name", 
              "Value": { "Fn::Sub": "${AWS::StackName}-db-b" }
            },
            { "Key": "Owner", 
              "Value": { "Ref": "ParamAuthorName" } 
            }
          ]
        }
      },
      "PublicSubnetC": {
        "Type": "AWS::EC2::Subnet",
        "DependsOn": "VPCIPv6CidrBlock",
        "Properties": {
          "VpcId": { "Ref": "VPC" },
          "CidrBlock": {
            "Fn::Sub": "10.${ParamVPCCidrRange}.64.0/20",
          },
          "Ipv6CidrBlock": { 
            "Fn::Select" : [
              2, 
              {
                "Fn::Cidr": [
                  { 
                    "Fn::Select": [
                      0,
                      {
                        "Fn::GetAtt": [ "VPC", "Ipv6CidrBlocks" ]
                      }
                    ]
                  },
                  256,
                  64 
                ]
              }
            ]
          },
          "AvailabilityZone": {
            "Fn::Select": [
              "2", 
              { "Fn:GetAZs": "" }
            ]
          },
          "Tags": [
            { 
              "Key": "Name", 
              "Value": { "Fn::Sub": "${AWS::StackName}-public-c" }
            },
            { "Key": "Owner", 
              "Value": { "Ref": "ParamAuthorName" } 
            }
          ]
        }
      },
      "PrivateSubnetC": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": { "Ref": "VPC" },
          "CidrBlock": {
            "Fn::Sub": "10.${ParamVPCCidrRange}.80.0/21",
          },
          "AvailabilityZone": {
            "Fn::Select": [
              "2", 
              { "Fn:GetAZs": "" }
            ]
          },
          "Tags": [
            { 
              "Key": "Name", 
              "Value": { "Fn::Sub": "${AWS::StackName}-private-c" }
            },
            { "Key": "Owner", 
              "Value": { "Ref": "ParamAuthorName" } 
            }
          ]
        }
      },
      "DBSubnetC": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": { "Ref": "VPC" },
          "CidrBlock": {
            "Fn::Sub": "10.${ParamVPCCidrRange}.88.0/22",
          },
          "AvailabilityZone": {
            "Fn::Select": [
              "2", 
              { "Fn:GetAZs": "" }
            ]
          },
          "Tags": [
            { 
              "Key": "Name", 
              "Value": { "Fn::Sub": "${AWS::StackName}-db-c" }
            },
            { "Key": "Owner", 
              "Value": { "Ref": "ParamAuthorName" } 
            }
          ]
        }
      },
      "PublicRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": { "Ref": "VPC"},
          "Tags": [
            { "Key": "Owner", "Value": { "Ref": "ParamAuthorName" } },
            { "Key": "Name", "Value": { "Fn::Sub": "${AWS::StackName}-public-route-table" } }
          ]
        }
      },
      "InternetGateway": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {
          "Tags": [
            { "Key": "Owner", "Value": { "Ref": "ParamAuthorName" } },
            { "Key": "Name", "Value": { "Fn::Sub": "${AWS::StackName}-igw" } }
          ]
        }
      },
      "InternetGatewayAttachment": {
        "Type": "AWS::EC2::InternetGatewayAttachment",
        "Properties": {
          "VpcId": { "Ref": "VPC"},
          "InternetGatewayId": { "Ref": "InternetGateway" }
        }
      },
      "InternetRoute": {
        "Type": "AWS::EC2::Route",
        "DependsOn": "InternetGatewayAttachment",
        "Properties": {
          "RouteTableId": { "Ref": "PublicRouteTable" },
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": { "Ref": "InternetGateway" }
        }
      },
      "RouteAssociationPublicSubnetA": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": { "Ref": "PublicSubnetA" },
          "RouteTableId": { "Ref": "PublicRouteTable" }
        }
      },
      "RouteAssociationPublicSubnetB": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": { "Ref": "PublicSubnetB" },
          "RouteTableId": { "Ref": "PublicRouteTable" }
        }
      },
      "RouteAssociationPublicSubnetC": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": { "Ref": "PublicSubnetC" },
          "RouteTableId": { "Ref": "PublicRouteTable" }
        }
      }
    },  
    "Outputs": {
      "VPCId": {
        "Description": "VPC Id",
        "Value": { "Ref": "VPC" }
      }
    }
  }